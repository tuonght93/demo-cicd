name: IOS Production Build

on:
  workflow_dispatch:
  release:
    types: [published] # only run the workflow when a new release has been published

jobs:
  ios-build:
    name: IOS Production Build
    runs-on: macOS-latest
    defaults:
      run:
        working-directory: ios

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Restore Pods cache
        uses: actions/cache@v2
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods
        run: pod install --repo-update && cd ..

      - name: Build IOS App
        uses: sparkfabrik/ios-build-action@v2.0.0
        with:
          project-path: ios/AwesomeTSProject.xcodeproj
          p12-base64: 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
          mobileprovision-base64: 
          code-signing-identity: iOS Development
          export-method: development
          match-build-type: development
          team-id: PMB2Z4TS69
          certificate-password: 1212
          workspace-path: ios/AwesomeTSProject.xcworkspace
          scheme: AwesomeTSProject

      ## Distribute app to Firebase App Distribution for testing / use google play internal track if you have a google play account
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: 1:724674160621:android:74c04f028c8de491e529e4
          token: 1//0eNLZ07b1z76cCgYIARAAGA4SNwF-L9IrQs_e1_Y4-uBSAqc7B6cubgIjKdSAp-nYfZB2CBV9J3bQvEnfRleTeZGcXPOlPObsSVY
          groups: tester
          file: output.ipa